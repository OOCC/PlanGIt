

.PHONY: all clean

ifneq ($(CROSS_COMPILE), )
  SYSROOT = --sysroot=/opt/fsl-qoriq/2.0/sysroots/cortexa7hf-vfp-neon-fsl-linux-gnueabi
  CC = $(CROSS_COMPILE)gcc
  AR = $(CROSS_COMPILE)ar
  LD = $(CROSS_COMPILE)ld
  STRIP = $(CROSS_COMPILE)strip
  NM = $(CROSS_COMPILE)nm
  OBJCOPY = $(CROSS_COMPILE)objcopy
  FHOS_CFLAGS = -march=armv7-a -mfloat-abi=hard -mfpu=neon -mtune=cortex-a7 $(SYSROOT)
else
  OBJCOPY = objcopy
endif

MKDIR = mkdir -p
RM = rm
RMFLAGS = -rf
ARFLAGS = crs

CFLAGS := $(EXTRA_CFLAGS) -O2 -g -Wall -Wextra

ifeq ($(BUILD), debug)
  CFLAGS +=
endif

ifneq ($(LIB), )
  MOD_NAME := $(patsubst %.a,  %, $(notdir $(LIB)))
  MOD_NAME := $(strip $(subst lib, , $(MOD_NAME)))
endif

ifneq ($(EXE),  )
  MOD_NAME := $(patsubst %.exe,  %, $(notdir $(EXE)))
  MOD_NAME := $(strip $(subst lib, , $(MOD_NAME)))
endif


BLD_DIR = $(PRJ_DIR)/build
DIR_OBJS = $(BLD_DIR)/obj/$(MOD_NAME)
DIR_EXES = $(BLD_DIR)/release
DIR_DEPS = $(BLD_DIR)/dep/$(MOD_NAME)
DIR_LIBS = $(BLD_DIR)/lib

DIRS = $(DIR_DEPS) $(DIR_OBJS) $(DIR_EXES) $(DIR_LIBS)

RMS = $(DIR_OBJS) $(DIR_DEPS)


ifeq ($(wildcard $(DIR_OBJS)), )
  OBJS_DIR_DEP := $(DIR_OBJS)
endif

ifeq ($(wildcard $(DIR_EXES)), )
  EXES_DIR_DEP := $(DIR_EXES)
endif

ifeq ($(wildcard $(DIR_DEPS)), )
  DEPS_DIR_DEP := $(DIR_DEPS)
endif

ifeq ($(wildcard $(DIR_LIBS)), )
  LIBS_DIR_DEP := $(DIR_LIBS)
endif

ifneq ($(EXE), )
  EXE := $(addprefix $(DIR_EXES)/, $(EXE))
  RMS += $(EXE)
endif

ifneq ($(LIB), )
  LIB := $(addprefix $(DIR_LIBS)/, $(LIB))
  RMS += $(LIB)
endif

SRCS = $(wildcard *.c)
OBJS = $(SRCS:.c=.o)
OBJS := $(addprefix $(DIR_OBJS)/, $(OBJS))
DEPS = $(SRCS:.c=.d)
DEPS := $(addprefix $(DIR_DEPS)/, $(DEPS))

ifneq ($(INC_DIRS), )
  INC_DIRS := $(strip $(INC_DIRS))
  INC_DIRS := $(addprefix -I, $(INC_DIRS))
endif
INC_DIRS += $(addprefix -I, $(PRJ_DIR)/include)

ifneq ($(LINK_LIBS), )
  LINK_LIBS := $(strip $(LINK_LIBS))
  LIB_ALL := $(wildcard $(DIR_LIBS)/*)
  LIB_ALL := $(notdir $(LIB_ALL))
  LIB_FILTER := $(addprefix lib, $(LINK_LIBS))
  LIB_FILTER := $(addsuffix %, $(LIB_FILTER))
  $(eval EXE_DEP_LIBS = $(filter $(LIB_FILTER), $(LIB_ALL)))
  EXE_DEP_LIBS := $(addprefix $(DIR_LIBS)/, $(EXE_DEP_LIBS))
  LINK_LIBS := $(addprefix -l, $(LINK_LIBS))
endif

ifneq ($(EXE), )
all: $(EXE)
endif

ifneq ($(LIB), )
all: $(LIB)
endif

ifneq ($(MAKECMDGOALS), clean)
  -include $(DEPS)
endif

$(DIRS):
	$(MKDIR) $@

$(EXE):: $(EXES_DIR_DEP) $(OBJS) $(EXE_DEP_LIBS)
	$(CC) -L$(DIR_LIBS) -o $@ $(filter %.o, $^) -Xlinker "-(" $(LINK_LIBS) $(EXTRA_LIBS) -Xlinker "-)"
#	$(OBJCOPY) --strip-debug $@ $(basename $@)

$(LIB):: $(LIBS_DIR_DEP) $(OBJS)
	$(AR) $(ARFLAGS) $@ $(filter %.o, $^)

$(DIR_OBJS)/%.o: $(OBJS_DIR_DEP) %.c
	$(CC) $(CFLAGS) $(INC_DIRS) -o $@ -c $(filter %.c, $^)

$(DIR_DEPS)/%.d: $(DEPS_DIR_DEP) %.c
	@echo "Making $@ ..."
	@set -e ; \
	$(RM) $(RMFLAGS) $@.tmp ; \
	$(CC) $(CFLAGS) $(INC_DIRS) -E -MM $(filter %.c, $^) > $@.tmp ; \
	sed 's,\(.*\)\.o[ :]*,$(DIR_OBJS)/\1.o $@: ,g' < $@.tmp > $@ ; \
	$(RM) $(RMFLAGS) $@.tmp

clean::
	$(RM) $(RMFLAGS) $(RMS)

