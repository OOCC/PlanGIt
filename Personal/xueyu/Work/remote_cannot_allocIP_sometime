２０１７－０１－２４　２３：５０：１９

这两天攻关一个问题，好好地总结一下。
首先，现象是我们配了一个remote　server（远端ＤＨＣＰ服务器），也就是AC作为中继器，负责转发用户的DHCP报文给远端的服务器。结果发现有小概率的
出现ＤＨＣＰ　ＳＥＲＶＥＲ不回的情况。

当时，我先是看的日志，发现我们的状态一直在wait dhcp server ack的状态，这个状态起了２５秒的定时器，在２５秒内，还有dhcp请求报文发过来，会被
ＡＣ丢弃掉，只有第一个会转发给远端服务器。我去抓包的时候忘了这回事，抓了ＡＰ侧的包，报文从ＡＰ侧进到ＡＣ，再由ＡＣ从网络侧转出去，所以我抓的包根
本不能证明，ＡＣ是把报文转出去了的。但是我拿着这个结论发邮件给ＩＴ的人看了，让他们排查自己的DHCP SERVER是否有问题。结果人家看到他们回了ＡＣＫ，
但是我们马上又自己release掉了。这样一来，我就慌了。当时我正好感觉自己的抓包口有问题(组网也是奇怪，不带vlan的接口出去的，以前没有遇到过)，又下去
正抓着包，改成了在网络侧抓包，正好又看到了确实我们收到了ACK但是在几秒后又回了release报文。


                　　                     　×　ap侧　×　×　网络侧　×
                         + ++++ +  　         + ++++++++ +                               + +++++++++++++++ +
用户dhcp请求  ------>      + ap  +     ------>  +  AC     +   ------>  用户dhcp请求　------> +  DHCP server   +
                         ++++++++             + ++++++++ +                               + +++++++++++++++ +
           
（请求就想图上那样发过去，ＤＨＣＰ　ＡＣＫ回来就原路返回嘛）


于是强哥坐不住了，跟着我一起搞了一下午，反复确认了报文。确实在网络侧是收到了ack报文的，但是为什么在ap侧又没有收到呢？release报文刚开始强哥认为
是定时器触发release，于是耐心反复地看了好几个报文。看起来每次收到ack和我们发release的时间又不一样，都是差不多10秒，但是又不完全一样。

然后我就去纠结relase去了，就在想为什么网络侧都收到了dhcp ack，但是ap侧却没有收到。就怀疑报文在ddf（报文进ac时，先进到接口，再进到ddf模块，就
是一个专门处理报文转发的模块，这个模块过后，再放到uoip报文队列中，最后再送到ac内部）丢掉了。也就是说，有如下的一个猜测：
    dhcp ack回来因为某种原因，被ddf丢掉了。于是ac收不到回应报文，代用户发了一个release。

但是我觉得不合理，有两点：
第一，如果收不到ack，ac也不应该代用户发送release报文，而是用户自己发送release报文。为什么呢？我也不知道，感觉吧。
第二，就算ac会代发release报文，也是定时器超时发，但是抓包看到，每次发release报文的时间间距都是有几秒钟差别的，不是每次都是一样的超时时长。

所以我认为不是超时，后来看了代码（前面也说了），我们收不到dhcp ack报文，超时时间是２５秒，固定的，跟现象也不匹配。于是我想找平台的人来看，ddf是
平台做的，不是我们做的。结果平台的人并不鸟我。我又自己看，后来越想越觉得不对劲。自己又去看日志，发现日志中，我们有报错一直在wait dhcp server ack
的状态的mac，再用这个mac去搜索我的抓包。发现特么的日志中dhcp　server没回的mac，在报文中一个也找不到。这才反应过来，情况并不是那么简单，这里存在
两种情况，要分开来看：
第一，我们发了dhcp请求，但是服务器没有dhcp回应。
第二，我们发了dhcp请求，也收到了服务器回应。但是我们又自己release掉了。(后来确认过了，这个是弱信号去关联，手机信号弱了，就去关联了，并且ac代为发
了一个release报文)。确认过程就不说了，唉。反正就是搅在一起了。

那么，现在就是要针对第一种情况，区分开第二种情况后，重新来定位问题。于是再找了ＩＴ的人来看，两边同一时间抓包，确认了是it那边的服务器没有回报文。
所以说时间点很重要，很多时候定位的准备工作做充分，就不会绕弯路。ｉｔ那边的人解释说，服务器地址池占用率太高，一直保持在８０％以上，导致有时服务器
没有响应。我和强哥在这之前就讨论过，it不回的原因。强哥认为是地址池占用太高，但是我觉得不是，这个地址池处理能力也太差了把，80%就不响应了，至少也
得给我回一个因地址池满的nak(拒绝)报文嘛。而且分地址，无非就是分配资源，也就是链表操作而已，那也做得太垃圾了嘛。但是ｉｔ的人，和大家都认为是地址池
利用率太高的原因，于是考虑将地址池扩容。

刚好远端服务器有两个地址池，另一个地址池一直没用，但是可分配ＩＰ的范围比目前正在用的大一圈。于是考虑切换地址池。

切换地址池又有一个问题了，直接将认证域下(地址池是绑定在认证域的，就比如有两个ＳＳＩＤ，一个是不要密码的，一个是要密码的，连不同的ssid时，就会分到
不同的ip。)的两个地址池对调一下顺序，但是对调顺序有两个问题：
１．对调顺序需要下线用户。(IP更换必须下线用户，所以就只能等到晚上大家都走了，才去对调。)
２．对调了顺序，但是用户重新连的时候，就一定会先去第一个地址池分地址吗？

第二点啥意思呢？比如你一个认证域(domain)下面绑定了两个地址池（ippool１, ippool2），刚开始，一个用户都还没有的时候，我们下配置，配两个地址池，
add_domain(ippool1, ippool2);add无非就是根据ippool的名字创建对应的id,形成一个映射关系。
但是我们在mod_domain的时候可能会有两种处理方式：

１．你对调ippool位置，也就是mod_domain(ippool2, ipool1)是没有任何意义的，因为ippool的名字跟id对应，你换了位置，id还是那个id。新的用户上
来，找地址池的时候，理论上是先找小的，再找大的。所以你表面上换了地址池顺序，实际上内部并没有任何改变。

２．mod_domain内部实现会严格按照参数的顺序来，mod_domain(agv1,agv2)，你每次mod时，它会比较旧的agv1和新的agv1是不是一样的，不一样就删了
重新创建映射关系。

显然２更适合，上面第一种，你需要循环找是否有匹配的ippool，效率更低，并且mod时没办法改变用户在哪个地址池获取ip的顺序。如果
呀改变顺序，就只能删了重新创建。实际上代码也是第二种。

于是晚上就去把地址池对调了顺序，对调操作如下：
１．开启用户阻塞开关，阻止新的用户接入。
２．删除小的地址池的所有用户，并且查询用户数量保证为零，删干净了。
３．对调地址池。
４．关闭用户阻塞开关，允许用户接入。

结果，我们还是漏了一点。切换了地址池之后，因为用户记得上次被分配的地址(上次被分配的地址是小的地址池的地址)，结果这次就拿着上次记得的地址继续去分地址，
所以还是跑到小的地址池去分地址去了。所以，我们把小的地址池直接删除了，再连用户。
结果，更特么坑爹，大的地址池居然没有回DHCP报文，你说之前不回是地址池利用率太高，服务器忙不回，现在尼玛一个都不回。

当时晚上了，怀疑是dhcp server没有回。it那边的人也下班了，所以就先回退了配置，将小的地址池放前面，让网络可以用。

第二天，我来单独搞了一个ssid，在这个ssid下配了大的地址池，先去抓包，看到确实没有回。但是ｉｔ那边的人说看到他们是回了dhcp　ack。所以我怀疑是他们没有
配回城路由。因为我的报文可以到达它的服务器，但是它服务器的报文却到不了我们AC。但是，ｉｔ的人说他们配了回城路由。去你妈逼。我受不了了。我就在ａｃ上配了
一个环回地址（一个虚拟出来的地址，反正可以用就对了），配成跟用户网关一样的地址，再用这个地址去ｐｉｎｇ对面的dhcp server。结果坑爹地一幕发生了。
Ｐｉｎｇ通了。于是我怀疑以下两点：
１．交换机上面配了ｖｌａｎｉｆ，把dhcp报文中途拦截了。
２．有些坑爹的交换机上要配bpdu enable，不然dhcp报文过不去。（但是之前小的地址池都可以过，所以排除掉这一点）。

于是，我又下去看交换机是不是配了vlanif，失望滴发现并没有配。下都下来抓包了，就顺便再配一个大地址池的SSID，再试一把。结果连上了！！！

草泥马，我也不知道为什么，反正就是他们坑。好吧，连上了就好。那我们就准备切到大的地址池。结果，ｉｔ的人问了句，你们只跟主dhcp　server交互了，但是没有
跟备dhcp server交互。强哥说我们只支持主dhcp server。好，结果特么的，强哥突然就想明白了，这个问题到底是为什么，什么问题？小概率出现用户上线，获取
不到ip地址。那这个跟主备dhcp server有毛关系？　　

ｂｅｃａｕｓｅ他们的服务器有一个负载均衡的处理，如果主服务器利用率达到一定高的时候，就会让备服务器来分地址。他们那边默认是对端要支持主备的。然而我们就
只支持主，没有备的说法。所以，当地址池利用率高的时候，主服务器会不分地址，让备服务器来。但是备服务器的ip都不同，中间根本没有路由，报文根本过不来，就算
过来了，我们不认识这个ｉｐ，也不会做任何处理。（其实这里应该ｃｈｅｃｋ一下，是否对备服务器ｉｐ配了回城路由。）好吧，原来搞半天是这个原因。但是强哥就多
了解了一点，问了下AC这边应该怎么实现主备。实现的方式就是我们每次转发用户的dhcp请求时，分成两份转，一份给主，一份给备。谁回我都可以。我为什么就没有想到
问一下这个。不过，这里也说明我之前的判断是正确的，服务器怎么可能占用率到了百分之八十就特么没响应，处理能力也太垃圾了。

当大的地址池可以分用户了之后，我们发现一个现象，就是很多用户就自己往大的地址池转移了。但是小的地址池并没有耗尽啊。于是推断之前大的地址池一个用户没有，是
因为根本不通。但是现在通了，有些用户在小的地址池连不上（因为备分地址没用），就切到大的地址池去分配IP了。但是这个切换策略还是不够明朗。具体代码细节中，我
怎么知道用户在这个地址池不行了，要切换到下一个地址池？或者地址池满了，要切换到下一个地址池？我推测是这样实现的：
１．刚开始一个用户没有的时候，就按照顺序来，先去第一个地址池分地址，不管地址池大小。
２．等到用户分到地址，我们记录一下，用户数量＋１。
３．如果收到了服务器的nak报文，下次分地址就找另外一个地址池分。

结果，我特么太幼稚了。真正的分配方法是：
１．每次服务器没有响应，超时把用户踢下线后，就发消息给ＡＭ（地址池模块），通知对应的地址池增加一次norespone计数。
２．每次服务器回了ａｃｋ，就记录一次成功次数。
分地址的时候，就先比较１，优选１更少的那个。１选不出来（两个地址池每次都响应了），再选２，选空闲比例大的那个。

对于１，我觉得确实简单合理，如果用按照我之前扯皮的，用nak来确定用哪个服务器也太戳了。因为nak一般都是用户发的请求不合法，而非这个服务器性能不行。

最后，根据这个优选原则，我推测用户会大批量地往地址池大的切。结果，在我们吃饭完回来后，发现百分之九十的用户都切过去了，因为大家都去吃饭了，回来重新连的。
并且由于地址池大，it那边做的负载均衡也基本用不上了。那么服务器没有响应的情况大大减少。由此，问题终于定位并解决。

最后就是要考虑我们是否有必要在后续的版本中支持主备DHCP SERVER功能。















